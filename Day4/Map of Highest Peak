#include<bits.stdc++.h>
using namespace std;
class Solution {
public:
    vector<vector<int>> highestPeak(vector<vector<int>>& iswater) {
        int n=iswater.size();
        int m=iswater[0].size();
        vector<vector<int>>ans(n,vector<int>(m,-1));
        queue<pair<int,int>>q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(iswater[i][j]){
                    ans[i][j]=0;
                    q.push({i,j});
                }
            }
        }
        while(!q.empty()){
            auto x=q.front();
            q.pop();
            int val1=x.first,val2=x.second;
            int v=ans[val1][val2];
            vector<int>temp{-1,0,1,0,-1};
            for(int i=0;i<temp.size()-1;i++){
                if(val1+temp[i]>=0 && val1+temp[i]<n && val2+temp[i+1]<m && val2+temp[i+1]>=0)
                {
                    if(ans[val1+temp[i]][val2+temp[i+1]]==-1)
                    {
                        ans[val1+temp[i]][val2+temp[i+1]]=v+1;
                        q.push({val1+temp[i],val2+temp[i+1]});
                    }
                }
            }
        }
        return ans;


    }
};

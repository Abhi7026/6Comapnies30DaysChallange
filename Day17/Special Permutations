class Solution {
public:
    int specialPerm(vector<int>& A) {
        int N = A.size(), mod = 1e9 + 7, mem[16][(1 << 14) + 1]{};
        function<int(int, int)> dfs = [&](int last, int mask) {
            if (mask == (1 << N) - 1)
                return 1;
            if (mem[last + 1][mask])
                return mem[last + 1][mask] - 1;
            int res = 0;
            for (int i = 0; i < N; i++) {
                if ((mask & (1 << i)) == 0 &&
                    (last == -1 || A[last] % A[i] == 0 ||
                     A[i] % A[last] == 0)) {
                    res = (dfs(i, mask | (1 << i)) + res) % mod;
                }
            }
            mem[last + 1][mask] = res + 1;
            return res;
        };
        return dfs(-1, 0);
    }
};

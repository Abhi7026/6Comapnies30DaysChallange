class Solution {
public:
    bool wordBreak(string s, vector<string>& word) {
        int n=s.size();
        unordered_set<string>mpp;
        for(auto it:word)
        mpp.insert(it);
        vector<int>ans(n+1,0);
        ans[0]=1;
        for(int i=1;i<=n;i++){
            for(int j=i-1;j>-1;j--)
            {
                if(ans[j]){
                    if(mpp.find(s.substr(j,i-j))!=mpp.end()){
                    ans[i]=1;
                    break;
                    }
                }
            }
        }
        return ans[n];
    }
};
